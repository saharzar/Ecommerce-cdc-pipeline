version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ecommerce-network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9092"]
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 10s
    networks:
      - ecommerce-network

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.5.0
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka:9092
      CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONTROL_CENTER_CONNECT_CLUSTER: http://debezium:8083
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 1
    networks:
      - ecommerce-network

  debezium:
    image: debezium/connect:2.5
    depends_on:
      - kafka
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: debezium
      CONFIG_STORAGE_TOPIC: debezium-configs
      OFFSET_STORAGE_TOPIC: debezium-offsets
      STATUS_STORAGE_TOPIC: debezium-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: false
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: false
    ports:
      - 8083:8083
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083"]
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 10s
    networks:
      - ecommerce-network

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: ecommerce
      MYSQL_PASSWORD: ecommerce
      MYSQL_DATABASE: ecommerce_db
    ports:
      - 3307:3306
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 10s
    networks:
      - ecommerce-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - ecommerce-network

  mongodb:
    image: mongo:6.0
    ports:
      - 27017:27017
    volumes:
      - mongo_data:/data/db
    networks:
      - ecommerce-network

  grafana:
    image: grafana/grafana:9.5.20
    depends_on:
      - mongodb
    ports:
      - 3000:3000
    networks:
      - ecommerce-network

  debezium-ui:
    image: debezium/debezium-ui:latest
    container_name: debezium-ui
    hostname: debezium-ui
    depends_on:
      debezium:
        condition: service_healthy
    ports:
      - '8080:8080'
    environment:
      KAFKA_CONNECT_URIS: http://debezium:8083
    networks:
      - ecommerce-network

  postgres:
    image: postgres:latest
    container_name: postgres
    hostname: postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecommerce_db
    command: [ 'postgres', '-c', 'wal_level=logical' ]
    healthcheck:
      test: [ 'CMD', 'psql', '-U', 'postgres', '-c', 'SELECT 1' ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - ecommerce-network
    depends_on:
      - postgres

volumes:
  mysql_data:
  mongo_data:

networks:
  ecommerce-network:
    driver: bridge
